---
import { folderService } from "@/services";
import type { Folder } from "@/services/types";
import { getUser } from "@/utils/auth";

const { fileId } = Astro.params;
const modalId = `move-modal-${fileId}`;
const closeButtonId = `close-modal-${fileId}`;

const user = getUser(Astro.cookies);

if (!user) {
  console.error("User not found");
  return Astro.redirect("/");
}

let folders: Folder[] | null = null;

try {
  folders = await folderService.getFolders(user.id);
} catch (error) {
  console.error(error);
}
---

<script define:vars={{ modalId, closeButtonId }}>
document.getElementById(closeButtonId).onclick = () => {
    document.getElementById(modalId).style.display = "none";
};
</script>

<div id={modalId} class="modal">
  <div class="modal-content">
    <button id={closeButtonId} class="close">&times;</button>

    {!folders && <h2>No folders</h2>}

    {
      folders && (
        <form hx-post={`/move/file/${fileId}.json`} target={`#${modalId}`}>
          {folders.map((folder) => (
            <div>
              <input
                type="checkbox"
                id={folder.id.toString()}
                name="folderIds"
                value={folder.id}
              />
              <label for={folder.id.toString()}>{folder.name}</label>
            </div>
          ))}

          <button type="submit">Move</button>
        </form>
      )
    }
  </div>
</div>

<style is:inline>
  .modal {
    display: block;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 400px;
    text-align: center;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }
  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }
</style>
