---
import Modal from "@/components/Modal.astro";
import { folderService } from "@/services";
import type { Folder } from "@/services/types";
import { getUser } from "@/utils/auth";

const { fileId } = Astro.params;
const modalId = `move-modal-${fileId}`;
const closeButtonId = `close-modal-${fileId}`;

const user = getUser(Astro.cookies);

if (!user) {
  console.error("User not found");
  return Astro.redirect("/");
}

let folders: Folder[] | null = null;

try {
  folders = await folderService.getFolders(user.id);
} catch (error) {
  console.error(error);
}
---

<Modal modalId={modalId} closeButtonId={closeButtonId}>
  {!folders && <h2>No folders</h2>}

  {
    folders && (
      <form hx-post={`/move/file/${fileId}.json`} target={`#${modalId}`}>
        <div style="margin-bottom: 1rem;">
          {folders.map((folder) => (
            <div class="checkbox-row">
              <input
                class="move-checkbox"
                type="checkbox"
                id={folder.id.toString()}
                name="folderIds"
                value={folder.id}
              />
              <label for={folder.id.toString()}>{folder.name}</label>
            </div>
          ))}
        </div>

        <button type="submit" class="move-button">
          Move
        </button>
      </form>
    )
  }
</Modal>

<style is:inline>
  form {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex: 1;
    margin: 0 auto;
    min-width: 300px;
    max-width: 400px;
  }

  label {
    margin-left: 0.5rem;
  }

  .move-checkbox:checked + label {
    font-weight: bold;
  }

  label,
  .move-checkbox {
    cursor: pointer;
    margin: 0;
    margin-right: 1rem;
  }

  .move-checkbox {
    transform: scale(1.5);
  }

  .move-button {
    margin-top: 1rem;
    padding: 0.5rem;
    font-size: large;
  }

  .checkbox-row {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
  }
</style>
