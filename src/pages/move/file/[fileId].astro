---
import { folderService } from "@/services";
import type { Folder } from "@/services/types";
import { getUser } from "@/utils/auth";

const { fileId } = Astro.params;
const modalId = `move-modal-${fileId}`;
const closeButtonId = `close-modal-${fileId}`;

const user = getUser(Astro.cookies);

if (!user) {
  console.error("User not found");
  return Astro.redirect("/");
}

let folders: Folder[] | null = null;

try {
  folders = await folderService.getFolders(user.id);
} catch (error) {
  console.error(error);
}
---

<script define:vars={{ modalId, closeButtonId }}>
document.getElementById(closeButtonId).onclick = () => {
  document.getElementById(modalId).style.display = "none";
};

document.addEventListener("keydown", (event) => {
  if (event.key === "Escape") {
    document.getElementById(modalId).style.display = "none";
  }
});
</script>

<div id={modalId} class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <button id={closeButtonId} class="close">&times;</button>
    </div>

    {!folders && <h2>No folders</h2>}

    {
      folders && (
        <form hx-post={`/move/file/${fileId}.json`} target={`#${modalId}`}>
          <div style="margin-bottom: 1rem;">
            {folders.map((folder) => (
              <div>
                <input
                  class="move-checkbox"
                  type="checkbox"
                  id={folder.id.toString()}
                  name="folderIds"
                  value={folder.id}
                />
                <label for={folder.id.toString()}>{folder.name}</label>
              </div>
            ))}
          </div>

          <button type="submit" class="move-button">
            Move
          </button>
        </form>
      )
    }
  </div>
</div>

<style is:inline>
  .modal {
    display: block;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .modal-content {
    display: flex;
    flex-direction: column;
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    height: 300px;
    width: 80%;
    max-width: 400px;
    overflow-y: scroll;
  }

  .modal-header {
    display: flex;
    justify-content: flex-end;
  }

  form {
    margin: 2rem auto;
  }

  label,
  .move-checkbox {
    cursor: pointer;
  }

  .move-button {
    float: right;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }
  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }
</style>
