---
import { fileService } from "@/services";
import { isAuthenticated } from "@/utils/auth";

export const partial = true;

if (!isAuthenticated(Astro.cookies)) {
  return new Response(null, {
    status: 400,
    statusText: "Invalid Authorization header.",
  });
}

const fileId = Astro.params.fileId;

if (!fileId || isNaN(Number(fileId))) {
  return new Response(JSON.stringify({ error: "File ID is required" }), {
    status: 400,
  });
}

const deletedFileId = await fileService.deleteFile(Number(fileId));

if (!deletedFileId) {
  return new Response(
    JSON.stringify({ error: "Error deleting file with ID: " + fileId }),
    { status: 500 },
  );
}

const shouldRedirect = Astro.request.headers
  .get("hx-current-url")
  ?.includes("file");

if (shouldRedirect) {
  const response = new Response(null, { status: 300 });

  response.headers.set("HX-Redirect", "/");

  return response;
}
---

<></>
