---
import FolderRow from "@/components/FolderRow.astro";
import NewFolderButton from "@/components/NewFolderButton.astro";
import { getUser, isAuthenticated } from "@/utils/auth";
import { folderService } from "@/services";

export const partial = true;

const cookies = Astro.cookies;

if (!isAuthenticated(cookies)) {
  return new Response(null, {
    status: 400,
    statusText: "Invalid Authorization header.",
  });
}

const body = await Astro.request.formData();

const folderName = body.get("folderName");

if (!folderName) {
  return new Response(JSON.stringify({ error: "Folder name is required" }), {
    status: 400,
  });
}

const user = getUser(cookies);

if (!user) {
  return new Response(JSON.stringify({ error: "User not found." }), {
    status: 404,
  });
}

const createdFolder = await folderService.createFolder(
  folderName.toString(),
  user.id,
);

const folderId = createdFolder?.id;

if (!folderId) {
  return new Response(JSON.stringify({ error: "Error creating folder." }), {
    status: 500,
  });
}
---

<div hx-swap-oob="afterbegin:#folder-list">
  <FolderRow folderId={folderId} folderName={createdFolder.name} />
</div>

<div hx-target="this" hx-swap="outerHTML">
  <NewFolderButton />
</div>
