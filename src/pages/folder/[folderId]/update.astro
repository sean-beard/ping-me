---
import { isAuthenticated } from "@/utils/auth";
import { folderService } from "@/services";
import FolderRow from "@/components/FolderRow.astro";

export const partial = true;

const cookies = Astro.cookies;
const params = Astro.params;

if (!isAuthenticated(cookies)) {
  return new Response(null, {
    status: 400,
    statusText: "Invalid Authorization header.",
  });
}

const folderId = params.folderId;

if (!folderId || isNaN(Number(folderId))) {
  return new Response(JSON.stringify({ error: "Folder ID is required" }), {
    status: 400,
  });
}

const body = await Astro.request.formData();

const folderName = body.get("folderName");

if (!folderName) {
  return new Response(JSON.stringify({ error: "Folder name is required" }), {
    status: 400,
  });
}

const folder = await folderService.updateFolder(Number(folderId), {
  name: folderName.toString(),
});

if (!folder) {
  return new Response(
    JSON.stringify({ error: "Error updating folder with ID: " + folderId }),
    {
      status: 500,
    },
  );
}
---

<FolderRow folderId={folder.id} folderName={folder.name} />
