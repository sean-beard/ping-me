---
import ButtonMenu from "./ButtonMenu.astro";

interface Props {
  folderId: number;
  folderName: string;
  isEditing?: boolean;
}

const { folderId, folderName, isEditing } = Astro.props;
---

{
  isEditing && (
    <li
      hx-trigger="cancel"
      hx-get={`/folder/${folderId}`}
      class="edit-folder-row"
    >
      <form hx-put={`/folder/${folderId}/update`} hx-include="closest li">
        <label for="folder-name">Name</label>
        <input
          type="text"
          id="folder-name"
          name="folderName"
          value={folderName}
        />

        <button hx-get={`/folder/${folderId}/row`} type="button">
          Cancel
        </button>

        <button type="submit">Save</button>
      </form>
    </li>
  )
}

{
  !isEditing && (
    <li id={`folder-${folderId}-row`} hx-swap="outerHTML" class="folder-row">
      <a href={`/folder/${folderId}`}>{folderName}</a>

      <ButtonMenu
        id={`folder-${folderId}-menu`}
        items={[
          {
            label: "Edit",
            url: `/folder/${folderId}/edit`,
            verb: "GET",
            target: `#folder-${folderId}-row`,
          },
          {
            label: "Delete",
            url: `/folder/${folderId}/delete`,
            verb: "DELETE",
            target: "#folder-list",
          },
        ]}
      />
    </li>
  )
}

<style>
  .folder-row,
  .edit-folder-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: var(--card-background);
    border-radius: 12px;
    padding: 0.5rem 1rem;
    margin: 0.5rem 0;
    list-style: none;
  }

  .edit-folder-row button {
    margin-left: 0.25rem;
  }
  .edit-folder-row label {
    margin-right: 0.5rem;
  }

  .edit-folder-row input {
    margin-right: 0.5rem;
    max-width: 200px;
  }

  /* Mobile */
  @media (max-width: 37.5em) {
    .folder-row {
      width: 100%;
      padding-right: 0.5rem;
    }
  }
</style>
