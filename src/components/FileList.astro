---
import type { File } from "@/services/types";
import ButtonMenu from "./ButtonMenu.astro";

interface Props {
  files: File[];
  folderId?: number;
}

const { files, folderId } = Astro.props;
---

<ul class="file-list">
  {
    files.map((file) => (
      <li class="file-row">
        <div class="file-name">
          <a href={`/file/${file.id}`}>{file.name}</a>
        </div>

        <ButtonMenu
          id={`file-${file.id}-menu`}
          items={[
            {
              label: "Copy",
              url: `/move/file/${file.id}`,
              verb: "GET",
              target: "#modal-container",
              swap: "innerHTML",
            },
            {
              label: "Delete",
              url: folderId
                ? `/folder/${folderId}/file/${file.id}.json`
                : `/file/${file.id}/delete.json`,
              verb: "DELETE",
            },
          ]}
        />
      </li>
    ))
  }
</ul>
<div id="modal-container"></div>

<style>
  .file-list {
    list-style: none;
    padding: 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 0.25fr));
    grid-gap: 1rem;
  }

  .file-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: var(--card-background);
    box-shadow: var(--shadow);
    border-radius: 12px;
    padding: 0.5rem 1rem;
    margin: 0.5rem 0;
    list-style: none;
  }

  .file-name {
    max-width: 175px;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  /* Mobile */
  @media (max-width: 37.5em) {
    .file-list {
      grid-template-columns: repeat(auto-fill, 100%);
    }

    .file-row {
      padding-right: 0.5rem;
    }
  }
</style>
