generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                      @id @default(autoincrement())
  username          String                   @unique
  email             String?
  firstName         String?
  lastName          String?
  files             File[]
  folders           Folder[]
  password          Password?
  // Session   Session[]
  notificationPrefs NotificationPreference[]
}

model Password {
  hash String

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @unique
}

// model Session {
//   id             String   @id @default(uuid())
//   createdAt      DateTime @default(now())
//   user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId         Int
//   expirationDate DateTime
// }

model File {
  id      Int      @id @default(autoincrement())
  name    String
  html    String
  folders Folder[]
  user    User     @relation(fields: [userId], references: [id])
  userId  Int
}

model Folder {
  id                Int                      @id @default(autoincrement())
  name              String
  files             File[]
  User              User                     @relation(fields: [userId], references: [id])
  userId            Int
  notificationPrefs NotificationPreference[]
}

model NotificationPreference {
  id       Int     @id @default(autoincrement())
  user     User    @relation(fields: [userId], references: [id])
  folder   Folder  @relation(fields: [folderId], references: [id])
  userId   Int
  folderId Int
  schedule String?

  @@unique([userId, folderId])
}
